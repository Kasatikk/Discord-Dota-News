name: "–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã-2"

on:
  issues:
    types: [opened]
  workflow_dispatch:  # —Ç–µ—Å—Ç–∏–∫

permissions:
  issues: write
  pull-requests: read

jobs:
  respond-to-issue:
    runs-on: ubuntu-latest
    steps:
      - name: Process new issue
        uses: actions/github-script@v7
        with:
          script: |
            try {
              // –û–±—Ä–∞–±–æ—Ç–∫–∞
              if (!context.payload.issue) {
                core.warning('No issue found in payload');
                return;
              }

              // –ò–∑—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ê–ü–∏
              const { issue } = context.payload;
              const { body, user, number, title } = issue;
              const { owner, repo } = context.repo;

              // —Ç—É–¥–∞-—Å—é–¥–∞
              if (user.login.includes('[bot]')) {
                console.log('Skipping bot message');
                return;
              }

              if (!body?.trim()) {
                await github.rest.issues.createComment({
                  issue_number: number,
                  owner,
                  repo,
                  body: "üëã –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫ –≤–∞—à–µ–º—É issue!"
                });
                return;
              }

              // 4. –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø issue
              const isBug = /error|bug|–æ—à–∏–±–∫–∞|–ø—Ä–æ–±–ª–µ–º–∞/i.test(body + title);
              const isFeature = /feature|enhancement|—É–ª—É—á—à–µ–Ω–∏–µ/i.test(body + title);

              // 5. –§–æ—Ä–º–∏—Ä—É–µ–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
              let response = `## üëã –ü—Ä–∏–≤–µ—Ç, @${user.login}!\n\n`;
              
              if (isBug) {
                response += `### üêû –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –æ—Ç—á–µ—Ç –æ–± –æ—à–∏–±–∫–µ\n`;
                response += `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ:\n\n`;
                response += "- –¢–æ—á–Ω—ã–µ —à–∞–≥–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è\n";
                response += "- –û–∂–∏–¥–∞–µ–º–æ–µ –∏ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ\n";
                response += "- –í–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤\n";
                response += "- –õ–æ–≥–∏/—Å–∫—Ä–∏–Ω—à–æ—Ç—ã (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ \\\`–∫–æ–¥\\\` –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)\n\n";
                response += "**–ú–µ—Ç–∫–∞:** –î–æ–±–∞–≤–ª–µ–Ω–∞ `bug`\n";
              } else if (isFeature) {
                response += `### üí° –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!\n`;
                response += `–ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à—É –∏–¥–µ—é:\n\n`;
                response += "- –ö–∞–∫—É—é –ø—Ä–æ–±–ª–µ–º—É —ç—Ç–æ —Ä–µ—à–∏—Ç?\n";
                response += "- –ï—Å—Ç—å –ª–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è?\n";
                response += "- –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è\n\n";
                response += "**–ú–µ—Ç–∫–∞:** –î–æ–±–∞–≤–ª–µ–Ω–∞ `enhancement`\n";
              } else {
                response += `### ‚ùì –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –≤–æ–ø—Ä–æ—Å\n`;
                response += `–î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —É—Ç–æ—á–Ω–∏—Ç–µ:\n\n`;
                response += "- –ß—Ç–æ –≤—ã —É–∂–µ –ø—Ä–æ–±–æ–≤–∞–ª–∏?\n";
                response += "- –ö–∞–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–∂–∏–¥–∞–µ—Ç–µ?\n";
                response += "- –†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –∫–æ–¥–∞\n\n";
                response += "**–ú–µ—Ç–∫–∞:** –î–æ–±–∞–≤–ª–µ–Ω–∞ `question`\n";
              }

              response += `\n> üîî –≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!`;

              // 6. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
              await github.rest.issues.createComment({
                issue_number: number,
                owner,
                repo,
                body: response
              });

              // 7. –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –º–µ—Ç–∫—É
              const labels = isBug ? ['bug'] : isFeature ? ['enhancement'] : ['question'];
              
              await github.rest.issues.addLabels({
                issue_number: number,
                owner,
                repo,
                labels: [...labels, 'triage']  // –í—Å–µ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–∫—É triage
              });

              console.log(`Successfully processed issue #${number}`);

            } catch (error) {
              // 8. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
              core.error(`Failed to process issue: ${error}`);
              core.setFailed(error.message);
            }
