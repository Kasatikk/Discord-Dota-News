name: –ê–≤—Ç–æ–æ—Ç–≤–µ—Ç –Ω–∞ issue

on:
  issues:
    types: [opened, edited]
  workflow_dispatch:  # —Ç—É–¥–∞-—Å—é–¥–∞

env:
  BOT_NAME: "--"
  DOCS_URL: "${{ github.server_url }}/${{ github.repository }}/wiki"
  CODE_FORMAT: "```\n$CODE\n```"  # –∑–∞–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
jobs:
  process-issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      pull-requests: read
    steps:
      - name: Analyze and respond
        uses: actions/github-script@v7
        id: respond
        with:
          script: |
            const { issue, repository } = context.payload;
            const { body, user, number } = issue;
            
            // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–≤–æ–∏ –∂–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –ø—É—Å—Ç—ã–µ issues
            if (user.login.includes('[bot]') || !body?.trim()) {
              console.log('Skipping bot or empty issue');
              return;
            }

            // –ê–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è issue
            const isBugReport = body.toLowerCase().includes('bug') || 
                              /error|issue|problem|–æ—à–∏–±–∫–∞|–ø—Ä–æ–±–ª–µ–º–∞/i.test(body);
            const isFeatureRequest = body.toLowerCase().includes('feature') || 
                                    /enhancement|improvement|—É–ª—É—á—à–µ–Ω–∏–µ/i.test(body);

            // AI -–∞–Ω–∞–ª–∏–∑ –∏ –∞–≤—Ç–æ –æ—Ç–≤–µ—Ç –ê–ü–ò
            let response = `## üëã –ü—Ä–∏–≤–µ—Ç, @${user.login}!\n\n`;
            
            if (isBugReport) {
              response += `### üêû –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –±–∞–≥-—Ä–µ–ø–æ—Ä—Ç\n`;
              response += `–î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Ç–æ—á–Ω–∏—Ç–µ:\n\n`;
              response += `1. **–¢–æ—á–Ω—ã–µ —à–∞–≥–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è**\n`;
              response += `2. **–û–∂–∏–¥–∞–µ–º–æ–µ vs —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ**\n`;
              response += `3. **–í–µ—Ä—Å–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤**\n`;
              response += `4. **–õ–æ–≥–∏/—Å–∫—Ä–∏–Ω—à–æ—Ç—ã** (–∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ${env.CODE_FORMAT.replace('$CODE', '–∫–æ–¥')} –¥–ª—è –ª–æ–≥–æ–≤)\n\n`;
              response += `üîç *–ú—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ –∞–Ω–∞–ª–∏–∑ –≤–∞—à–µ–≥–æ –æ—Ç—á–µ—Ç–∞!*\n`;
            } else if (isFeatureRequest) {
              response += `### üí° –°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!\n`;
              response += `–ü–æ–º–æ–≥–∏—Ç–µ –Ω–∞–º –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à—É –∏–¥–µ—é:\n\n`;
              response += `1. **–ö–∞–∫—É—é –ø—Ä–æ–±–ª–µ–º—É —ç—Ç–æ —Ä–µ—à–∏—Ç?**\n`;
              response += `2. **–ï—Å—Ç—å –ª–∏ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è?**\n`;
              response += `3. **–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è**\n\n`;
              response += `üìä *–ú—ã –æ—Ü–µ–Ω–∏–º –≤–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤ —Ç–µ—á–µ–Ω–∏–µ 48 —á–∞—Å–æ–≤*\n`;
            } else {
              response += `### ‚ùì –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à –≤–æ–ø—Ä–æ—Å\n`;
              response += `–î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —É—Ç–æ—á–Ω–∏—Ç–µ:\n\n`;
              response += `1. **–ß—Ç–æ –≤—ã —É–∂–µ –ø—Ä–æ–±–æ–≤–∞–ª–∏?**\n`;
              response += `2. **–ö–∞–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–∂–∏–¥–∞–µ—Ç–µ?**\n`;
              response += `3. **–†–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã –∫–æ–¥–∞/–∫–æ–Ω—Ñ–∏–≥–æ–≤**\n\n`;
              response += `üìö –í–æ–∑–º–æ–∂–Ω–æ, –æ—Ç–≤–µ—Ç —É–∂–µ –µ—Å—Ç—å –≤ [–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏](${env.DOCS_URL})\n`;
            }

            // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –±–ª–æ–∫–∏
            response += `\n<details>
            <summary><b>üìù –®–∞–±–ª–æ–Ω –¥–ª—è –æ—Ç–≤–µ—Ç–∞</b></summary>
            
            ${env.CODE_FORMAT.replace('$CODE', 
              isBugReport ? 
              '**–®–∞–≥–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:**\n1. ...\n\n**–û–∂–∏–¥–∞–µ–º—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:**\n...\n\n**–§–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:**\n...' : 
              '**–û–ø–∏—Å–∞–Ω–∏–µ:**\n...\n\n**–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ:**\n...\n\n**–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:**\n...'
            )}
            </details>`;

            response += `\n\nüîî *–≠—Ç–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!*`;

            // –°–æ–∑–¥–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
            await github.rest.issues.createComment({
              issue_number: number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: response
            });

            // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–µ—Ç–∫–∏
            const labels = [];
            if (isBugReport) labels.push('bug', 'needs-triage');
            else if (isFeatureRequest) labels.push('enhancement', 'under-review');
            else labels.push('question', 'needs-info');

            await github.rest.issues.addLabels({
              issue_number: number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: labels
            });

            // –î–ª—è feature requests —Å–æ–∑–¥–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—É—é –¥–∏—Å–∫—É—Å—Å–∏—é
            if (isFeatureRequest) {
              await github.rest.repos.createDiscussion({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `–û–±—Å—É–∂–¥–µ–Ω–∏–µ FR: ${issue.title}`,
                body: `–°–≤—è–∑–∞–Ω–æ —Å #${number}\n\n${issue.body}`,
                category: 'Ideas'
              });
            }

      - name: Log processing result
        if: always()
        run: echo "Issue #${{ github.event.issue.number }} processed by ${{ env.BOT_NAME }}"
